<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');/***for user*@author iscod*/class User_model extends CI_Model {		private $mcache_key_uid = 'USERINFO_CACHE_BY_UID';	private $mcache_key_username = 'USER_CACHE_BY_USERNAME';	private $mcache_key_email = 'USER_CACHE_BY_EMAIL';	private $mcache_key_pass = 'USER_CACHE_BY_PASS';	private $mcache_key_user_follwers = 'USER_CACHE_BY_FOLLWER';	private $mcache_key_user_follwing = 'USER_CACHE_BY_FOLLWING';	/**	*@param string $username	*@return array $uid	*/	public function get_by_username($username, $cache = true) {		if ($cache) {			$uid = Mcache::read($this->mcache_key_username . $username);			if ($uid) return $uid;		}				$this->load->database();		$this->db->select('ID');		$users = $this->db->get_where('users', array('user_login' => $username));		if (!$users || $users->num_rows < 1) {			return false;		}		$user = $users->row_array();		$uid = $user['ID'];		Mcache::write($this->mcache_key_username . $username, $uid);		return $uid;	}	/**	*@param string $email	*@return $uid	*/	public function get_by_email($email, $cache = true) {		if ($cache) {			$uid = Mcache::read($this->mcache_key_email . $email);			if ($uid) return $uid;		}		$this->load->database();		$this->db->select('ID');		$query = $this->db->get_where('users', array('user_email' => $email));		if (!$query) {			return false;		}		if ($query->num_rows() < 1) {			return null;		}		$user = $query->row_array();		$uid = $user['ID'];		Mcache::write($this->mcache_key_email . $email, $uid);				return $uid;	}	/**	*@param int $uid	*@param bool $cache=true	*@return array||bool $userinfo||false	*/	public function get_by_uid($uid, $cache = true) {				if (!$uid) {			return false;		}		if ($cache) {			$userinfo = Mcache::read($this->mcache_key_uid . $uid);			if ($userinfo && is_array($userinfo)) {				return $userinfo;			}		}		Mcache::delete($this->mcache_key_uid . $uid);		$user_config = dbclass::user($uid);		$db = $this->load->database($user_config['dsn'], true);		$db->select('user_login, user_nickname, user_email, user_registered, user_status');		$query = $db->get_where($user_config['table'], array('ID' => $uid));		if (!$query) {			return false;		}		if ($query->num_rows() < 1) {			return null;		}		$users = $query->row_array();		$users['uid'] = $uid;		//查询用户userinfo		$users_config = dbclass::usersinfo($uid);		$db2 = $this->load->database($users_config['dsn'], true);		$usersinfo = $db2->get_where($users_config['table'], array('uid' => $uid));		$usersinfo = $usersinfo->row_array();		//合并两个数组		$userinfo = array_merge($users, $usersinfo);		Mcache::write($this->mcache_key_uid . $uid, $userinfo);		return $userinfo;	}	/**	*@param array $user_info	*@return bool true|false	*/	public function set_user_insert($userinfo) {		$is_user = $this->get_by_email($userinfo['user_email']);		if ($is_user) return false;		$this->load->database();		$is_insert = $this->db->insert('users', $userinfo);		if (!$is_insert) return false;		$uid = $this->db->insert_id();		return $uid;	}	/**	*The only place where to get the password	*@param int $uid	*@return string pass	*/	public function get_pass_by_uid($uid = '') {		if (!$uid) {			$uid = $this->uid;		}		if (Mcache::read($this->mcache_key_pass . $uid)) {			return Mcache::read($this->mcache_key_pass . $uid);		}		$user_config = dbclass::user($uid);		$db = $this->load->database($user_config['dsn'], true);		$db->select('user_pass');		$query = $db->get_where($user_config['table'], array('ID' => $uid));		$userinfo = $query->row_array();		if (!isset($usersinfo['user_pass'])) return false;		Mcache::write($this->mcache_key_pass . $uid, $userinfo['user_pass']);		return $userinfo['user_pass'];	}	/**	*The is user follsers	*获取用户关注的人	*@param int $uid	*@return array uids	*/	public function get_by_uid_follwers($uid){		if ($uid) return array();		if (Mcache::read($this->mcache_key_user_follwers . $uid)) {			return Mcache::read($this->mcache_key_user_follwers . $uid);		}		$user_config = dbclass::userfollwer($uid);		$db = $this->load->database($user_config['dsn'], true);		$db->select('follower_uid');		$query = $db->get_where($user_config['table'], array('uid' => $uid ));		$user_follwers = $query->row_array();		Mcache::write($this->mcache_key_user_follwers . $uid, $user_follwers);		return $user_follwers;	}	/**	*The is user follsers	*获取关注该用户的人	*@param int $uid	*@return array uids	*/	public function get_by_uid_follwing($uid){		if ($uid) return array();		if (Mcache::read($this->mcache_key_user_follwing . $uid)) {			return Mcache::read($this->mcache_key_user_follwing . $uid);		}		$user_config = dbclass::userfollwer($uid);		$db = $this->load->database($user_config['dsn'], true);		$db->select('follower_uid');		$query = $db->get_where($user_config['table'], array('follwer_uid' => $uid ));		$user_follwing = $query->row_array();		Mcache::write($this->mcache_key_user_follwing . $uid, $user_follwing);		return $user_follwing;	}}